{"version":3,"file":"static/js/862.04314567.chunk.js","mappings":"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","sources":["webpack://event-planner/./src/components/Events/EventsGrid/EventsItem/events-item.module.css?845f","components/Events/EventsGrid/EventsItem/EventsItem.jsx","components/Events/EventsGrid/EventsGrid.jsx","shared/components/IconBtn/IconBtn.jsx","components/Events/EventsNav/EventsNav.jsx","components/Events/Events.jsx","pages/MainPage/MainPage.jsx","shared/components/Btn/Btn.jsx","shared/data/events-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"events-item_btn__rSyxO\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Btn from 'shared/components/Btn/Btn';\r\nimport image from '../../../../shared/images/defaults/default-vert.png';\r\n\r\nimport css from './events-item.module.css';\r\n\r\nconst EventsItem = ({\r\n  id,\r\n  img,\r\n  text,\r\n  title,\r\n  onClick,\r\n  date,\r\n  time,\r\n  place,\r\n  itemClass,\r\n  category,\r\n  priority,\r\n}) => {\r\n  const formatDateTime = timestamp => {\r\n    const dateObject = new Date(timestamp * 1000); // конвертація в мілісекунди\r\n\r\n    // якщо це значення часу\r\n    const options = { hour: '2-digit', minute: '2-digit' };\r\n    return new Intl.DateTimeFormat('en-US', options).format(dateObject);\r\n  };\r\n\r\n  const formatDate = timestamp => {\r\n    const dateObject = new Date(timestamp * 1000); // конвертація в мілісекунди\r\n    const options = { month: '2-digit', day: '2-digit' };\r\n    return new Intl.DateTimeFormat('en-US', options).format(dateObject);\r\n  };\r\n\r\n  const imageWrapperStyle = 'h-[280px] relative ';\r\n  const imageStyle = 'w-full h-full rounded-lg';\r\n  const itemStyle =\r\n    'flex flex-col items-center w-[271px] md:w-[332px] h-[480px] rounded-lg shadow-base bg-white';\r\n\r\n  return (\r\n    <li className={!itemClass ? itemStyle : itemStyle + ' ' + itemClass}>\r\n      <div className={imageWrapperStyle}>\r\n        <img className={imageStyle} src={img} alt={text} />\r\n        <div\r\n          className=\"absolute bottom-0 w-full flex justify-between px-4 py-2 \r\n        text-accent-500 bg-[rgba(255,255,255,0.80)] text-sm leading-6\"\r\n        >\r\n          <p>\r\n            {typeof date === 'string' ? date : formatDate(date)} at{' '}\r\n            {typeof time === 'string' ? time : formatDateTime(time)}\r\n          </p>\r\n          <p>{place}</p>\r\n        </div>\r\n        {category ||\r\n          (priority && (\r\n            <div className=\"absolute top-0 flex gap-3\">\r\n              <p>{category}</p>\r\n              <p>{priority}</p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"inline-block py-4 px-4 min-h-[200px]\">\r\n        <h3 className=\"text-[#1C1B1F] text-base font-medium\">{title}</h3>\r\n        <p className=\"max-h-[72px] text-[#49454F] mt-4 text-sm overflow-hidden\">\r\n          {text}\r\n        </p>\r\n        <Btn\r\n          customClass={\r\n            css.btn +\r\n            ' absolute opacity-0 transition-all hover:bg-hover-500 transition-colors'\r\n          }\r\n          text=\"More info\"\r\n          onClick={() => onClick(id)}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nEventsItem.defaultProps = {\r\n  title: 'Gallery opening',\r\n  text: ' Discover an enchanting evening celebrating the world of art at our exclusive gallery opening.',\r\n  img: image,\r\n  date: 1700641454, // приклад значення timestamp\r\n  time: 1700641454, // приклад значення timestamp\r\n  place: 'Kyiv',\r\n  onClick: () => {},\r\n  category: '',\r\n  priority: '',\r\n};\r\n\r\nEventsItem.propTypes = {\r\n  itemClass: PropTypes.string,\r\n  img: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  // date: PropTypes.number,\r\n  // time: PropTypes.number,\r\n  place: PropTypes.string,\r\n  category: PropTypes.string,\r\n  priority: PropTypes.string,\r\n};\r\n\r\nexport default EventsItem;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport EventsItem from './EventsItem';\r\n\r\nconst EventsGrid = ({ list }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = id => {\r\n    navigate(`/event/${id}`);\r\n  };\r\n\r\n  const elements = list?.map(\r\n    ({ id, image, description, title, date, time, location }) => (\r\n      <EventsItem\r\n        key={id}\r\n        img={image}\r\n        text={description}\r\n        title={title}\r\n        onClick={() => handleClick(id)}\r\n        date={date}\r\n        time={time}\r\n        place={location}\r\n        itemClass=\"\"\r\n      />\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4\">\r\n        {elements}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport sprite from '../../images/icons/sprite.svg';\r\n\r\nconst IconBtn = ({ icon, type, onClick, customClass, customIconClass }) => {\r\n  const btnClass =\r\n    'p-4 inline-flex justify-center items-center rounded-lg cursor-pointer';\r\n  const IconClass = 'w-6 h-6';\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={!customClass ? btnClass : btnClass + ' ' + customClass}\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        className={\r\n          !customIconClass ? IconClass : IconClass + ' ' + customIconClass\r\n        }\r\n      >\r\n        <use href={sprite + icon}></use>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nIconBtn.defaultProps = {\r\n  icon: '#icon-cross-small',\r\n  type: 'button',\r\n  customClass: '',\r\n  customIconClass: '',\r\n};\r\n\r\nIconBtn.propTypes = {\r\n  icon: PropTypes.string,\r\n  type: PropTypes.string,\r\n  customClass: PropTypes.string,\r\n  customIconClass: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default IconBtn;\r\n\r\n/*\r\ndisplay: inline-flex;\r\npadding: 16px;\r\njustify-content: center;\r\nalign-items: center;\r\ngap: 16px;\r\n\r\nborder-radius: 8px;\r\nbackground: #FFF;\r\n\r\n\r\nbox-shadow: 2px 4px 9px 0px rgba(166, 141, 174, 0.28);\r\n*/\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport IconBtn from '../../../shared/components/IconBtn';\r\n\r\nconst EventsNav = () => {\r\n  const navigate = useNavigate();\r\n  const goToAddEventPage = () => {\r\n    navigate('/add-event');\r\n  };\r\n  const iconPath = ['#icon-filters-2', '#icon-filters-3', '#icon-plus'];\r\n\r\n  return (\r\n    <div className=\"flex justify-end items-center gap-[24px] mb-10\">\r\n      <IconBtn icon={iconPath[1]} customClass=\"cursor-default disabled\" />\r\n      {/* <IconBtn icon={iconPath[0]} /> */}\r\n      <button className=\"cursor-default disabled\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M14 5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5M14 5C14 6.10457 13.1046 7 12 7C10.8954 7 10 6.10457 10 5M14 5H20M10 5L4 5M16 12C16 13.1046 16.8954 14 18 14C19.1046 14 20 13.1046 20 12C20 10.8954 19.1046 10 18 10C16.8954 10 16 10.8954 16 12ZM16 12H4M8 19C8 17.8954 7.10457 17 6 17C4.89543 17 4 17.8954 4 19C4 20.1046 4.89543 21 6 21C7.10457 21 8 20.1046 8 19ZM8 19H20\"\r\n            stroke=\"#3F3F3F\"\r\n            strokeWidth=\"1.5\"\r\n            strokeLinecap=\"round\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      <IconBtn\r\n        customClass={'bg-accent-500 hover:bg-hover-500 transition-colors'}\r\n        icon={iconPath[2]}\r\n        onClick={goToAddEventPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsNav;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport EventsGrid from './EventsGrid';\r\nimport EventsNav from './EventsNav';\r\n\r\nimport { getAllEvents } from 'shared/data/events-api';\r\n\r\nconst Events = () => {\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await getAllEvents();\r\n\r\n        setList(response);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error.name);\r\n      }\r\n    };\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <EventsNav />\r\n      <EventsGrid list={list} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import React from 'react';\r\n\r\nimport Events from '../../components/Events';\r\n\r\nconst MainPage = () => {\r\n  return <Events />;\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Btn = ({ text, customClass, onClick, type }) => {\r\n  const buttonStyles =\r\n    'flex justify center items-center rounded-lg py-[10px] px-6 bg-accent-500 text-[#f3f3f3] cursor-pointer';\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={!customClass ? buttonStyles : buttonStyles + ' ' + customClass}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nBtn.defaultProps = {\r\n  type: 'button',\r\n};\r\n\r\nBtn.propTypes = {\r\n  onClick: PropTypes.func,\r\n  text: PropTypes.string.isRequired,\r\n  customClass: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Btn;\r\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://655745e2bd4bcef8b6125c2f.mockapi.io/api/event',\n  // params: {\n  //   _limit: 8,\n  // },\n});\n\nexport const searchEvents = async (q, _page = 1) => {\n  const { data } = await instance.get('/', {\n    params: {\n      q,\n      _page,\n    },\n  });\n  return data;\n};\n\nexport const getAllEvents = async () => {\n  const { data } = await instance.get('/');\n  return data;\n};\n\nexport const getEventById = async id => {\n  const { data } = await instance.get(`/${id}`);\n  return data;\n};\n\nexport const addEvent = async eventData => {\n  const { data } = await instance.post('/', eventData);\n  return data;\n};\n"],"names":["EventsItem","_ref","id","img","text","title","onClick","date","time","place","itemClass","category","priority","itemStyle","_jsxs","className","children","_jsx","src","alt","timestamp","dateObject","Date","Intl","DateTimeFormat","month","day","format","formatDate","hour","minute","formatDateTime","Btn","customClass","css","defaultProps","list","navigate","useNavigate","elements","map","_ref2","image","description","location","concat","handleClick","IconBtn","icon","type","customIconClass","btnClass","IconClass","href","sprite","EventsNav","iconPath","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","goToAddEventPage","Events","setList","useState","useEffect","async","response","getAllEvents","error","console","name","fetchEvents","EventsGrid","MainPage","buttonStyles","instance","axios","create","baseURL","data","get","getEventById","addEvent","post","eventData"],"sourceRoot":""}