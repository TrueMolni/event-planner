{"version":3,"file":"static/js/578.70e1c90a.chunk.js","mappings":"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","sources":["components/AddForm/AddForm.jsx","pages/AddEventPage/AddEventPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm, Resolver } from 'react-hook-form';\r\n\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  title: yup.string().required('Title is required'),\r\n  description: yup.string().required('Description is required'),\r\n  date: yup.date().required('Date is required'),\r\n  time: yup.string().required('Time is required'),\r\n  image: yup.string().url('Invalid URL').required('Image URL is required'),\r\n  location: yup.string().required('Location is required'),\r\n});\r\n\r\nconst resolver: Resolver = async (data, context) => {\r\n  try {\r\n    return {\r\n      values: await schema.validate(data, { abortEarly: false }),\r\n      errors: {},\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      values: {},\r\n      errors: e.inner.reduce(\r\n        (acc, error) => ({\r\n          ...acc,\r\n          [error.path]: {\r\n            type: error.type,\r\n            message: error.message,\r\n          },\r\n        }),\r\n        {}\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nconst AddForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: resolver,\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    console.log(data); // Обробка даних форми\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create new event</h1>\r\n      <form\r\n        className=\"bg-white p-4 rounded shadow max-w-md mx-auto\"\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <label>\r\n          Title\r\n          <input\r\n            {...register('title')}\r\n            type=\"text\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <p className=\"text-red-500\">{errors.title?.message}</p>\r\n        </label>\r\n\r\n        <label className=\"mt-2 block text-sm font-medium leading-6 text-gray-900\">\r\n          Description\r\n          <textarea\r\n            {...register('description')}\r\n            name=\"about\"\r\n            rows={3}\r\n            className=\"block w-full rounded-md border-0 py-1.5 \r\n              text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400\r\n               focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n            defaultValue={''}\r\n          />\r\n          <p className=\"text-red-500\">{errors.description?.message}</p>\r\n        </label>\r\n        <label>\r\n          Select date\r\n          <input\r\n            {...register('date')}\r\n            type=\"text\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <p className=\"text-red-500\">{errors.date?.message}</p>\r\n        </label>\r\n        <label>\r\n          Select time\r\n          <input\r\n            {...register('time')}\r\n            type=\"text\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <p className=\"text-red-500\">{errors.time?.message}</p>\r\n        </label>\r\n        <label>\r\n          Add picture\r\n          <input\r\n            {...register('image')}\r\n            type=\"text\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <p className=\"text-red-500\">{errors.image?.message}</p>\r\n        </label>\r\n        <label>\r\n          Location\r\n          <input\r\n            {...register('location')}\r\n            type=\"text\"\r\n            className=\"border p-2 w-full\"\r\n          />\r\n          <p className=\"text-red-500\">{errors.location?.message}</p>\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white p-2 mt-4 rounded\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport AddForm from \"../../components/AddForm\";\r\n\r\nconst AddEventPage = () => {\r\n  return <AddForm />;\r\n};\r\n\r\nexport default AddEventPage;\r\n/*\r\n itemClass: PropTypes.string,\r\n  img: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  date: PropTypes.string,\r\n  time: PropTypes.string,\r\n  place: PropTypes.string,\r\n  category: PropTypes.string,\r\n  priority: PropTypes.string,\r\n*/\r\n"],"names":["schema","yup","shape","title","required","description","date","time","image","url","location","resolver","async","data","context","values","validate","abortEarly","errors","e","inner","reduce","acc","error","path","type","message","AddForm","_errors$title","_errors$description","_errors$date","_errors$time","_errors$image","_errors$location","register","handleSubmit","formState","useForm","_jsxs","children","_jsx","className","onSubmit","console","log","name","rows","defaultValue","AddEventPage"],"sourceRoot":""}